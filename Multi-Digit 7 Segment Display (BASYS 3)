module seven_segment_multi_display (
    input logic clk,
    input logic [3:0] firstOne,
    input logic [3:0] secondOne,
    input logic [3:0] thirdOne,
    input logic [3:0] fourthOne,
    output reg [3:0] an,
    output logic [6:0] segment
);


    logic [1:0] anodeCases;
    logic [1:0] counter;
    logic [19:0] refreshRate;


    always @(posedge clk) begin
        if (counter > 1)
            counter <= 2'b00;
        else
            counter <= counter + 1;
    end


    always @(posedge clk)
        refreshRate = refreshRate + 1;


    assign anodeCases = refreshRate[19:18];


    logic [3:0] led;
    always @(*) begin
        case (anodeCases)
            0 : begin an = 4'b1110; led = firstOne; end
            1 : begin an = 4'b1101; led = secondOne; end
            2 : begin an = 4'b1011; led = thirdOne; end
            3 : begin an = 4'b0111; led = fourthOne; end
        endcase
    end


    always @(*) begin
        case (led)
            0 : segment = 7'b0000001;
            1 : segment = 7'b1001111;
            2 : segment = 7'b0010010;
            3 : segment = 7'b0000110;
            4 : segment = 7'b1001100;
            5 : segment = 7'b0100100;
            6 : segment = 7'b0100000;
            7 : segment = 7'b0001111;
            8 : segment = 7'b0000000;
            9 : segment = 7'b0000100;
            default : segment = 7'b1111110;
        endcase
    end


endmodule
